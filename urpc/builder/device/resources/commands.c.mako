<%namespace import="namespaced" module = "urpc.builder.device.utils.namespaced" inheritable="True"/>\
/*
 * Each file must start with this include.
 * File containes global settings.
 */
#include "settings.h"

/*
 * Main includes here.
 */
#include "commands.h"

/*
 * This file is autogenerated.
 * Changes made to this file can be overwritten.
 */

#if defined(__cplusplus)
extern "C"
{
#endif

typedef struct
{
  uint32_t  Command;
  uint16_t  InputSize;
  uint16_t  OutputSize;

} lengths_t;

static const lengths_t Lengths[] =
{
  /*
   * Command code, input size, output size.
   */
% for (cmd_id, request_size, response_size) in view.command_lengths:
  { ${namespaced(cmd_id)},   ${request_size},    ${response_size} },
% endfor
  { 0, 0, 0 }   // End of array must be always
};

%if view.accessors_count():
/*
 * Global structure with settings which is applied by the accessors.
 */
${namespaced("settings_storage_t")} Commands_SettingsStorage;

%endif
/*
 * This function is a lookup routine to get input data length in the packet.
 * If command is listed in the Lengths[] - it returns corresponding
 * data length. If not - it returns default command length.
 */
uint16_t Commands_GetInputSize(uint32_t cmd)
{
  for (uint32_t i = 0; Lengths[i].Command; i++)
  {
    if (cmd == Lengths[i].Command)
      return Lengths[i].InputSize;
  }

  return _COMMAND_LENGTH;
}

/*
 * This function is a lookup routine to get output data length in the packet.
 * If command is listed in the Lengths[] - it returns corresponding
 * data length. If not - it returns zero, which means that invalid
 * command is received.
 */
uint16_t Commands_GetOutputSize(uint32_t cmd)
{
  for (uint32_t i = 0; Lengths[i].Command; i++)
  {
    if (cmd == Lengths[i].Command)
      return Lengths[i].OutputSize;
  }

  return 0;
}

#if defined(__cplusplus)
};
#endif
